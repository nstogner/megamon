apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-config
  namespace: system
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    
    processors:
      filter:
        metrics:
          include:
            match_type: regexp
            metric_names:
              - megamon.*
      batch:
        # batch metrics before sending to reduce API usage
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 5s
      #transform:
      #  # "location", "cluster", "namespace", "job", "instance", and "project_id" are reserved, and
      #  # metrics containing these labels will be rejected.  Prefix them with exported_ to prevent this.
      #  metric_statements:
      #  - context: datapoint
      #    statements:
      #    - set(attributes["location"], "us-east5")
      #    #- delete_key(attributes, "location")
      #    - delete_key(attributes, "cluster")
      #    - delete_key(attributes, "namespace")
      #    - delete_key(attributes, "job")
      #    - delete_key(attributes, "instance")
      #    - delete_key(attributes, "project_id")   
      resourcedetection:
        # Brings in "location" attribute.
        detectors: [gcp]
        timeout: 2s
        override: false
      resource:
        attributes:
        # Hardcode instance attribute to ensure it doesn't create new timeseries
        # upon restart of Megamon.
        - key: service.instance.id
          value: "megamon"
          action: upsert
    exporters:
      googlemanagedprometheus:
      
    extensions:
      health_check:
    
    service:
      extensions: [health_check]
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [filter, batch, resourcedetection, resource]
          exporters: [googlemanagedprometheus]